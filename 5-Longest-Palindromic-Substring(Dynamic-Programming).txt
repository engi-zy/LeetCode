/*
Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

Subscribe to see which companies asked this question
*/

public class Solution {
    public String longestPalindrome(String s) {
        char test[]=s.toCharArray();
        boolean box[][]=new boolean[s.length()][s.length()];
        int maxlen=1;
        int start=0;
        
        for(int i=0;i<s.length();i++){
            box[i][i]=true;
        }
        
        for(int i=0;i<s.length()-1;i++){
            if(test[i]==test[i+1]){
                box[i][i+1]=true;
                start=i;
                maxlen=2;
            }
        }
        
        for(int len=3;len<=s.length();len++){
            for(int i=0;i<s.length()-len+1;i++){
                int j=i+len-1;
                if(test[i]==test[j] && box[i+1][j-1]){
                    box[i][j]=true;
                    start=i;
                    maxlen=len;
                }
            }
        }
        
        return s.substring(start,start+maxlen);
    }
}