/*
Given a roman numeral, convert it to an integer.

Input is guaranteed to be within the range from 1 to 3999.
*/

public class Solution {
    
    public int romanToInt(String s) {
        int result=0;
        char s_char[]=s.toCharArray();
        int nums[]=new int[s.length()];
        for(int i=0;i<s.length();i++){
            switch(s_char[i]){
                case 'I':nums[i]=1;break;
                case 'V':nums[i]=5;break;
                case 'X':nums[i]=10;break;
                case 'L':nums[i]=50;break;
                case 'C':nums[i]=100;break;
                case 'D':nums[i]=500;break;
                case 'M':nums[i]=1000;break;
            }
        }
        boolean flag=false;
        int times=0;
        for(int i=0;i<nums.length;i++){
            if(i==nums.length-1){
                result=result+(times+1)*nums[i];
            }else{
                if(nums[i]==nums[i+1]){
                times++;
                }else{
                    if(nums[i]>nums[i+1]){
                        result=result+(times+1)*nums[i];
                    }else{
                        result=result+nums[i+1]-(times+1)*nums[i];
                        i=i+1;
                    }
                    times=0;
                }
            }
        }
        return result;
    }
}